"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var pg_1 = require("pg");
var config_1 = require("../config");
var restify_1 = require("../restify");
var DB = /** @class */ (function () {
    function DB() {
    }
    // private client = new Client({
    //     connectionString: 'postgres://postgres:mymac@localhost:5432/simpleretail'
    // })
    DB.setup = function () {
        console.log(config_1.factory.getWebConfig().DB_URL);
        DB.pool = new pg_1.Pool({
            connectionString: config_1.factory.getWebConfig().DB_URL
            // connectionString: 'postgres://postgres:mymac@localhost:5432/simpleretail'
        });
    };
    /**
     * Execute any query using DB.query() function
     * @param text query to be executed
     * @param params params needs to be mapped in query
     * DB.query('SELECT * FROM users WHERE id = $1', [id]')
     */
    DB.query = function (text, params) {
        return new Promise(function (resolve, reject) {
            var start = Date.now();
            return DB.pool.query(text, params).then(function (success) {
                var end = Date.now();
                var duration = end - start;
                restify_1.ApiServer.Logger.info('Postgres query -> ' + text + ' \n params -> ' + params + ' Start time ' + start + 'end time ' + end + 'duration ' + duration);
                // DB.pool.end();
                return resolve(success.rows);
            }).catch(function (error) {
                var end = Date.now();
                var duration = end - start;
                restify_1.ApiServer.Logger.Error('Postgres query -> ' + text + ' \n params -> ' + params + ' Start time ' + start + 'end time ' + end + 'duration ' + duration);
                // DB.pool.end()
                return reject(error);
            });
        });
    };
    DB.DBJSONFunctions = function (method, json) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var start = Date.now();
            return DB.pool.query("select " + method + " (" + _this.jsonFormatterForPost(json) + ")", null).then(function (success) {
                var end = Date.now();
                var duration = end - start;
                restify_1.ApiServer.Logger.info('Postgres query -> ' + method + ' \n params -> ' + json + ' Start time ' + start + 'end time ' + end + 'duration ' + duration);
                // DB.pool.end();
                return resolve(success.rows);
            }).catch(function (error) {
                var end = Date.now();
                var duration = end - start;
                restify_1.ApiServer.Logger.Error('Postgres query -> ' + method + ' \n params -> ' + json + ' Start time ' + start + 'end time ' + end + 'duration ' + duration);
                // DB.pool.end()
                return reject(error);
            });
        });
    };
    DB.jsonFormatterForPost = function (jsn) {
        var myJSON = JSON.stringify(jsn);
        var text = myJSON.toString().replace(/"/g, '\\"');
        var final = "'" + text + "'";
        return final;
    };
    return DB;
}());
exports.DB = DB;
//# sourceMappingURL=postgres.js.map