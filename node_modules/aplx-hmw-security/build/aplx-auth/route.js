"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var aplx_hmw_server_1 = require("aplx-hmw-server");
var controller_1 = require("./controller");
var path_1 = require("path");
var config_1 = require("../config");
var AplxAuthRoute = /** @class */ (function () {
    function AplxAuthRoute() {
    }
    AplxAuthRoute.prototype.initialize = function (httpServer) {
        /**
         * Create new User
         */
        //   httpServer.post("/aplxAuth/authentication/createUser", this.createUser.bind(this));
        /**
         * service to do login
         */
        httpServer.post("/aplxAuth/authentication/login", this.login.bind(this));
        /**
        * service to get token for reseting the password
        */
        //     httpServer.post("/aplxAuth/authentication/forgetPassword", this.forgetPassword.bind(this));
        /**
        * service to do reset password
        */
        //    httpServer.post("/aplxAuth/authentication/resetPassword", this.resetPassword.bind(this));
    };
    /*
    createUser(req: Request, res: Response, next: Next) {
        const applicationSource = factory.getWebConfig().applicationSource;
        switch (applicationSource) {
            case ApplicationSource.APLX:
                new AplxAuthController().createUser(req.body, req.headers['x-access-token']).then( (success) => {
                    res.send(200, success);
                }, (error) => {
                    ApiServer.Logger.Error(error, join(__dirname), "createUser()")
                    res.send(400, error);
                });
                break;
            case ApplicationSource.ERP:
                break;
            case ApplicationSource.BOTH:
                break;
            default:
                break;
        }
    }
*/
    AplxAuthRoute.prototype.login = function (req, res, next) {
        var applicationSource = config_1.factory.getWebConfig().applicationSource;
        switch (applicationSource) {
            // If application source is aplx
            case aplx_hmw_server_1.ApplicationSource.APLX:
                new controller_1.AplxAuthController().doLogin(req.body).then(function (success) {
                    res.send(200, success);
                }, function (error) {
                    aplx_hmw_server_1.ApiServer.Logger.Error(error, path_1.join(__dirname), "login()");
                    res.send(400, error);
                });
                break;
            // If application source is any ERP
            case aplx_hmw_server_1.ApplicationSource.ERP:
                break;
            case aplx_hmw_server_1.ApplicationSource.BOTH:
                break;
            default:
                res.send(400, "Application Source not specified.");
                break;
        }
    };
    return AplxAuthRoute;
}());
exports.AplxAuthRoute = AplxAuthRoute;
//# sourceMappingURL=route.js.map