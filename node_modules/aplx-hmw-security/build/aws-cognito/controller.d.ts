import * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';
export declare class AwsCognitoControllers {
    constructor();
    getUserPools(): Promise<any>;
    /**
   * Communicate to aws with the region id specified
   * Will create the user based on the user pool configuration which is passed as parameters while calling admin create user
   * @param params { email: String, mobile: String with country code" }
   */
    adminUserSignUp(params: any): Promise<string | JSON>;
    /**
     * Will sign in user with aws cognito service
     * @param params {"email": "string", "password": "**********"}
     */
    userSignIn(params: any): Promise<AmazonCognitoIdentity.CognitoUser | any>;
    /**
     * set new user password
     * @param params {
    "email": "mahboob.mohamed@applexus.com",
    "password": "123456789",
    "newPassword": "1234567890"

}
     */
    setNewUserPassword(params: any): Promise<{}>;
    /**
     * refresh login in aws
     * If token is expired with aws, Instead of login, we can reuse the refresh token to create new session
     * @param object { email: "email@some.com", token: "22dasdasd23qasdasd"}
     */
    renew(params: any): Promise<{}>;
    /**
     *
     * @param params {username: email, oldPassword: old_password, newPassword: new_passsword}
     */
    changePassword(params: any): Promise<{}>;
}
